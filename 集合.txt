ArrayList的特点：

　　1.ArrayList的底层数据结构是数组，所以查找遍历快，增删慢。

　　2.ArrayList可随着元素的增长而自动扩容，正常扩容的话，每次扩容到原来的1.5倍。

　　3.ArrayList的线程是不安全的。

ArrayList 和 Vector 的区别
	同步性
		这两个类实现了List接口，都是有序集合，即存储元素的位置索引也是有序，数据允许重复的，相当于一种动态数组。
		vector是线程安全的，也就说方法之间是线程同步的，而 ArrayList 是线程序不安全的，它的方法之间是线程不同步的。
	数据增长
		Vector 增长原来的一倍，ArrayList 增加原来的 0.5 倍。

记住Vector 与 Hashtable 是旧的，是 java 一诞生就提供了的，它们是线程安全的，
	ArrayList 与 HashMap 是 java2 时才提供的，它们是线程不安全的。

List 、Set、 Map有什么区别和联系
	list 和set 有共同的父类 它们的用法也是一样的 唯一的不太就是set中不能有相同的元素 list中可以
	list和set的用途非常广泛 list可以完全代替数组来使用
	map 是独立的合集 它使用键值对的方式来储存数据 键不能有重复的 值可以用
	map不像上边两种集合那个用的广泛 不过在servlet 和jsp中 map可是绝对的重中之重 页面之间传值全靠map

集合中为什么要设计这个迭代器
	迭代器：->将集合看做成一个公共汽车时，其中的乘客就是一个个数据，如果我想遍历出每个数据，或者说是查找某一个乘客的话，让售票员去找（迭代器iterator），
	这就会不会暴露==内部数据和结构==，提高==安全性==
	使用：
		ArrayList arrayList=new ArrayList();
		arrayList.add("1");
		arrayList.add("c");
		arrayList.add("33");
		arrayList.add("cc");

		ListIterator listIterator = arrayList.listIterator();
		while (listIterator.hasNext()){
			//表示的迭代器直接可以将数据的集合，通过方法-区创建一个迭代器对象，只能是单独的一个；
			Object object = listIterator.next();
			System.out.println(object);
		}

	优点: 
       1.可以不了解集合内部的数据结构,就可以直接遍历
       2.不暴露内部的数据,可以直接外部遍历;
       3.适用性强,基本上的集合都能使用迭代器;

    迭代器本质是一种设计模式，为了解决为不同的集合类提供统一的遍历操作接口